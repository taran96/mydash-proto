syntax = "proto3";

option go_package = "mydash/grpc";

package grpc;

message Empty {

}


enum TextType {
    NUMBER = 0;
    TEXT = 1;
    CODE = 2; // This is like number but it will include tags needed for autofill
}

message ValueSnippet {
    string value = 1;
    string valueUnits = 2;
    string subValue = 3;
    string subValueUnits = 4;
}

message TextInputWidget {
    string textId = 1;
    TextType text = 2;
}

message MultiWidget {
    string name = 1;
    repeated Widget widgets = 2;
}

message Toggle {
    bool state = 1;
    string label = 2;
    string onText = 3;
    string offText = 4;
}

message Widget {
    string id = 1;
    string name = 2;
    enum Status { 
        SUCCESS = 0;
        WARN = 1;
        ERROR = 2;
    }

    Status status = 3;
    repeated string colors = 4;
    string image = 5;
    bool requiresAuthCode = 6;
    oneof data {
        ValueSnippet valueSnippet = 7;
        Toggle toggle = 8;
        TextInputWidget textInputWidget = 9;
        MultiWidget multiWidget = 10;
    }
}

message WidgetsResponse {
    repeated Widget widgets = 1;
}


// No parameters required
message RefreshAction {}

message ButtonAction {
    string buttonId = 1;
}

message SwitchAction {
    string switchId = 1;
    bool value = 2;
}

message TextAction {
    string textId = 1;
    string value = 2;
    
    TextType type = 3;
}

message WidgetAction {
    string id = 1;
    oneof action {
        RefreshAction refreshAction = 2;
        ButtonAction buttonAction = 3;
        SwitchAction switchAction = 4;
        TextAction textAction = 5;
    }
}




service WidgetService {
    rpc getWidgets(Empty) returns (WidgetsResponse);
    rpc getUpdates(Widget) returns (stream Widget);
    rpc registerWidget(stream Widget) returns (stream WidgetAction);
    rpc sendWidgetAction(WidgetAction) returns (Empty);
}
